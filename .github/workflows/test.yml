name: Tests

on:
    push:
        branches: ['*']
    pull_request:
        branches: ['*']

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.24.x]
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
      
    - name: Run main project tests
      run: go test -v ./...
      
    - name: Setup test directories go.mod files
      run: |
        # Setup go.mod for custom-predicate test
        cd test/custom-predicate
        if [ ! -s go.mod ]; then
          echo "module github.com/solrac97gr/goarchtest/test/custom-predicate" > go.mod
          echo "go 1.24.1" >> go.mod
          echo "" >> go.mod
          echo "replace github.com/solrac97gr/goarchtest => ../.." >> go.mod
          echo "" >> go.mod
          echo "require github.com/solrac97gr/goarchtest v0.0.0-00010101000000-000000000000" >> go.mod
        fi
        go mod tidy
        cd ../..
        
        # Setup go.mod for custom-architecture test
        cd test/custom-architecture
        if [ ! -s go.mod ]; then
          echo "module github.com/solrac97gr/goarchtest/test/custom-architecture" > go.mod
          echo "go 1.24.1" >> go.mod
          echo "" >> go.mod
          echo "replace github.com/solrac97gr/goarchtest => ../.." >> go.mod
          echo "" >> go.mod
          echo "require github.com/solrac97gr/goarchtest v0.0.0-00010101000000-000000000000" >> go.mod
        fi
        go mod tidy
        cd ../..

        # Setup go.mod for ddd-clean-architecture test
        cd test/ddd-clean-architecture
        if [ ! -s go.mod ]; then
          echo "module github.com/solrac97gr/goarchtest/test/ddd-clean-architecture" > go.mod
          echo "go 1.24.1" >> go.mod
          echo "" >> go.mod
          echo "replace github.com/solrac97gr/goarchtest => ../.." >> go.mod
          echo "" >> go.mod
          echo "require github.com/solrac97gr/goarchtest v0.0.0-00010101000000-000000000000" >> go.mod
        fi
        go mod tidy
        cd ../..
        
        # Clean architecture already has proper go.mod
        cd test/clean-architecture
        go mod tidy
        cd ../..
    
    - name: Run custom-predicate tests
      run: |
        cd test/custom-predicate
        go test -v ./...
        
    - name: Run custom-architecture tests
      run: |
        cd test/custom-architecture
        go test -v ./...
        
    - name: Run clean-architecture tests
      run: |
        cd test/clean-architecture
        go test -v ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.24.x
        
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m
        skip-cache: false
        skip-pkg-cache: false
        skip-build-cache: false
